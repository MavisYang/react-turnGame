{"version":3,"sources":["../../src/components/modal/BaseModal.jsx"],"names":["propTypes","visible","bool","isRequired","onCancel","func","BaseModal","refs","modalOverlay","onclick","e","stopPropagation","props","modal","children","Component"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,YAAY;AAChBC,WAAS,oBAAUC,IAAV,CAAeC,UADR;AAEhBC,YAAU,oBAAUC;AAFJ,CAAlB;;IAKMC,S;;;AACJ,uBAAc;AAAA;;AAAA;AAEb;;;;yCAEqB;AAAA;;AACpB,UAAI,KAAKC,IAAL,CAAUC,YAAV,IAA0B,CAAC,KAAKD,IAAL,CAAUC,YAAV,CAAuBC,OAAtD,EAA+D;;AAE7D;AACA,aAAKF,IAAL,CAAUC,YAAV,CAAuBC,OAAvB,GAAiC,UAACC,CAAD,EAAO;AACtCA,YAAEC,eAAF;AACA,iBAAKC,KAAL,CAAWR,QAAX,IAAuB,OAAKQ,KAAL,CAAWR,QAAX,EAAvB;AACD,SAHD;;AAKA;AACA;AACA,aAAKG,IAAL,CAAUM,KAAV,CAAgBJ,OAAhB,GAA0B,UAACC,CAAD;AAAA,iBAAOA,EAAEC,eAAF,EAAP;AAAA,SAA1B;AACD;AACF;;;6BAES;AAAA;;AACR,UAAIE,QAAQ,2CAAZ;AACA,UAAI,KAAKD,KAAL,CAAWX,OAAf,EAAwB;AACtBY,gBACE;AAAA;AAAA,YAAK,WAAU,eAAf;AACE,iBAAK,aAACL,YAAD,EAAkB;AAAE,qBAAKA,YAAL,GAAoBA,YAApB;AAAkC,aAD7D;AAEE;AAAA;AAAA,cAAK,WAAU,OAAf,EAAuB,KAAK,aAACK,KAAD,EAAW;AAAE,uBAAKA,KAAL,GAAaA,KAAb;AAAoB,eAA7D;AACG,iBAAKD,KAAL,CAAWE;AADd;AAFF,SADF;AAQD;AACD,aACE;AAAA;AAAA,UAAe,YAAW,kBAA1B,EAA6C,SAAS,GAAtD,EAA2D,MAAI,IAA/D;AACID;AADJ,OADF;AAKD;;;;EArCqB,gBAAME,S;;AAwC9BT,UAAUN,SAAV,GAAsBA,SAAtB;;kBAEeM,S","file":"BaseModal.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onCancel: PropTypes.func,\n}\n\nclass BaseModal extends React.Component {\n  constructor() {\n    super();\n  }\n\n  componentDidUpdate () {\n    if (this.refs.modalOverlay && !this.refs.modalOverlay.onclick) {\n\n      // 点击阴影背景时cancel() popup\n      this.refs.modalOverlay.onclick = (e) => {\n        e.stopPropagation();\n        this.props.onCancel && this.props.onCancel();\n      }\n\n      // 点击modal阻止默认行为\n      // 原理：react event listener中无法阻止原生事件，所以用原生事件来替代react事件\n      this.refs.modal.onclick = (e) => e.stopPropagation();\n    }\n  }\n\n  render () {\n    let modal = <span></span>;\n    if (this.props.visible) {\n      modal = (\n        <div className=\"modal-overlay\" \n          ref={(modalOverlay) => { this.modalOverlay = modalOverlay;}}>\n          <div className=\"modal\" ref={(modal) => { this.modal = modal;}}>\n            {this.props.children}\n          </div>\n        </div>\n      );\n    }\n    return (\n      <CSSTransition classNames=\"modal-transition\" timeout={240} in={true}>\n         {modal}\n      </CSSTransition>\n    );\n  }\n}\n\nBaseModal.propTypes = propTypes;\n\nexport default BaseModal;\n\n\n"]}